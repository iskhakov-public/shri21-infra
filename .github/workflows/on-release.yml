name: "Tagged Release"

on:
  push:
    tags:
      - "v*"

env:
  IMAGE_NAME: todoapp

jobs:
  github_tagged_release:
    runs-on: "ubuntu-20.04"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install Python dependencies
        run: "python -m pip install requests"

      - name: Create Changelog
        run: "sh ./scripts/generate_changelog.sh > ./logs/changelog.txt && cat ./logs/changelog.txt"

      - name: Push Changelog to Yandex.Tracker
        run: |
          python scripts/yandex-tracker.py create_ticket -d ./logs/changelog.txt > ./logs/issueid.log
          python scripts/yandex-tracker.py create_comment -m "Build started" -i ./logs/issueid.log
        env:
          YANDEX_OAUTH: ${{ secrets.OAUTH}}
          YANDEX_ORGID: ${{ secrets.ORGID}}
          YANDEX_QUEUE: TMP

      - uses: actions/setup-node@v2
        with:
          node-version: "15"
          cache: "npm"

      - name: Install dependencies
        run: "npm ci"

      - name: Run Build
        run: "npm run build"

      - name: Run tests
        run: "CI=true npm test &> ./logs/tests.log && cat ./logs/tests.log"

      - name: Push Tests to Yandex.Tracker
        run: "python scripts/yandex-tracker.py create_comment -t ./logs/tests.log -i ./logs/issueid.log"
        env:
          YANDEX_OAUTH: ${{ secrets.OAUTH}}
          YANDEX_ORGID: ${{ secrets.ORGID}}
          YANDEX_QUEUE: TMP

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker build . --file Dockerfile --tag $IMAGE_NAME
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          GIT_TAG=$(git tag -l | tail -1)
          echo $GIT_TAG
          docker tag $IMAGE_NAME $IMAGE_ID:$GIT_TAG
          docker push $IMAGE_ID:$GIT_TAG
          python scripts/yandex-tracker.py create_comment -i ./logs/issueid.log -m "Docker image was pushed, use 'docker pull $IMAGE_ID:$GIT_TAG'
          Build Finished"
        env:
          YANDEX_OAUTH: ${{ secrets.OAUTH}}
          YANDEX_ORGID: ${{ secrets.ORGID}}
          YANDEX_QUEUE: TMP

      - name: YT Connector Logs
        run: "ls ./logs"
